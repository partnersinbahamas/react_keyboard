{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","message","pressedKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,2BAFb,EAaEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,QAAQ,4BAAD,OAA8BE,EAAME,IAApC,QAd3B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,cAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,cAV/C,oBAiBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,oBAAIS,UAAU,eAAd,SAA8BT,QArBpC,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.e89dd0ec.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  message: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    message: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.pressedKey);\n  }\n\n  pressedKey = (event: KeyboardEvent) => {\n    this.setState({ message: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <h1 className=\"App__message\">{message}</h1>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}